#BlueJ class context
comment0.target=R_StockRW
comment0.text=\r\n\ Implements\ Read/Write\ access\ to\ the\ stock\ list,\r\n\ the\ stock\ list\ is\ held\ in\ a\ relational\ DataBase.\r\n\ @author\ \ Mike\ Smith\ University\ of\ Brighton\r\n\ @version\ 2.1\r\n
comment1.params=url
comment1.target=R_StockRW(java.lang.String)
comment1.text=\r\n\ All\ transactions\ are\ done\ via\ StockRW\ to\ ensure\r\n\ that\ a\ single\ connection\ to\ the\ database\ is\ used\ for\ all\ transactions\r\n\ @param\ url\ of\ remote\ object\r\n\ @throws\ java.rmi.RemoteException\ if\ issue\r\n\ @throws\ middle.StockException\ if\ issue\r\n
comment2.params=pNum
comment2.target=boolean\ exists(java.lang.String)
comment2.text=\r\n\ Returns\ true\ if\ product\ exists\r\n\ @param\ pNum\ The\ product\ number\r\n\ @return\ true\ if\ product\ exists\ else\ false\r\n\ @throws\ middle.StockException\ if\ underlying\ error\r\n
comment3.params=pNum
comment3.target=catalogue.Product\ getDetails(java.lang.String)
comment3.text=\r\n\ Returns\ details\ about\ the\ product\ in\ the\ stock\ list\r\n\ @param\ pNum\ The\ product\ number\r\n\ @return\ StockNumber,\ Description,\ Price,\ Quantity\r\n\ @throws\ middle.StockException\ if\ underlying\ error\r\n
comment4.params=pNum
comment4.target=javax.swing.ImageIcon\ getImage(java.lang.String)
comment4.text=\r\n\ Returns\ an\ image\ of\ the\ product\ in\ the\ stock\ list\r\n\ @param\ pNum\ The\ product\ number\r\n\ @return\ image\r\n\ @throws\ middle.StockException\ if\ underlying\ error\r\n
comment5.params=pNum\ amount
comment5.target=boolean\ buyStock(java.lang.String,\ int)
comment5.text=\r\n\ Buys\ stock\ and\ hence\ decrements\ number\ in\ the\ stock\ list\r\n\ @param\ pNum\ product\ number\r\n\ @param\ amount\ amount\ required\r\n\ @return\ StockNumber,\ Description,\ Price,\ Quantity\r\n\ @throws\ middle.StockException\ if\ underlying\ error\r\n
comment6.params=pNum\ amount
comment6.target=void\ addStock(java.lang.String,\ int)
comment6.text=\r\n\ Adds\ (Restocks)\ stock\ to\ the\ product\ list\r\n\ @param\ pNum\ The\ product\ number\r\n\ @param\ amount\ Quantity\r\n\ @throws\ middle.StockException\ if\ underlying\ error\r\n
comment7.params=product
comment7.target=void\ modifyStock(catalogue.Product)
comment7.text=\r\n\ Modifies\ Stock\ details\ for\ a\ given\ product\ number.\r\n\ Information\ modified\:\ Description,\ Price\r\n\ @param\ product\ The\ product\ to\ be\ modified\r\n\ @throws\ middle.StockException\ if\ underlying\ error\r\n
numComments=8
